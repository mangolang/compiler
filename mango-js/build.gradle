
buildscript {
    ext.web_dir = "${projectDir}/build/web"
    // TODO: isn't there some better way to get the path to this output file?:
    ext.mainJsPath = "$project.buildDir.path/classes/main/${project.name}.js"
    ext.testJsPath = "$project.buildDir.path/classes/test/${project.name}_test.js"

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
    }
}

apply plugin: "kotlin-platform-js"
apply plugin: 'com.moowork.node'

compileKotlin2Js {
    kotlinOptions {
        moduleKind = "umd"
        sourceMap = true
        metaInfo = true
    }
}

compileTestKotlin2Js {
    kotlinOptions {
        moduleKind = "umd"
        sourceMap = true
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    expectedBy project(":")
    testCompile "org.jetbrains.kotlin:kotlin-test-js:$kotlin_version"
}

defaultTasks 'run'

def homeFile = "${projectDir}/build/resources/main/org/mangolang/dev/home.html"
def kotlinJsFile = "../node_modules/kotlin/kotlin.js"
task web(type: Copy) {
    dependsOn build
    from file(mainJsPath)
    from file(testJsPath)
    from file(homeFile)
    from file(kotlinJsFile)
    into { "${web_dir}" }
}
web.doFirst {
    assert file(mainJsPath).exists()
    assert file(testJsPath).exists()
    assert file(homeFile).exists()
    assert file(kotlinJsFile).exists(): "kotlin.js not found at ${kotlinJsFile}; make sure to run `npm install`"
}

task testJsNode(type: NodeTask) {
    description = "Run the Javascript tests using NodeJS"
    dependsOn test
    script = file(testJsPath)
}

task run(type: NodeTask) {
    description = "Run the Javascript code using NodeJS (no browser)"
    dependsOn testJsNode
    dependsOn web
    script = file(mainJsPath)
}


